#!/usr/bin/env python
from __future__ import print_function

import argparse
import os
import re
import shutil
import sys

from dh_virtualenv import Deployment
from distutils.spawn import find_executable


_BYTECODE_REGEX = re.compile('.*.py[co]')


def delete_bytecode(directory):
    for root, dirs, files in os.walk(directory):
        for f in files:
            if _BYTECODE_REGEX.match(f):
                os.remove(os.path.join(root, f))


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description="Build a virtualenv, and rewrite the internal paths with an arbitrary root directory.")
    parser.add_argument(
        '--requirements', required=True, help="A requirements.txt file specifying dependencies.")
    parser.add_argument(
        '--root-dir', required=True, help="Directory to which the virtualenv's hardcoded paths should be rewritten.")
    parser.add_argument(
        '--python3', action='store_true', help="Build the virtualenv with Python3 as the default interpreter.")

    args, unknown = parser.parse_known_args()

    root_dir = os.path.realpath(args.root_dir)

    os.environ['DH_VIRTUALENV_INSTALL_ROOT'] = os.path.dirname(root_dir)

    deploy = Deployment(
        package=os.path.basename(root_dir),
        requirements_filename=args.requirements,
        upgrade_pip=True,
        verbose=False,
        use_system_packages=True,
        python=find_executable('python3') if args.python3 else find_executable('python2'),
        builtin_venv=args.python3,
    )

    print('Generating virtualenv in {}'.format(deploy.package_dir))
    deploy.create_virtualenv()

    print('Installing requirements')
    deploy.install_dependencies()

    print('Fixing virtualenv root to {}'.format(deploy.virtualenv_install_dir))
    deploy.fix_activate_path()
    deploy.fix_shebangs()
    deploy.fix_local_symlinks()

    # Remove all .py[co] files since they embed absolute paths
    delete_bytecode(deploy.package_dir)

    if not args.python3:
        # Remove local folder
        shutil.rmtree(os.path.join(deploy.package_dir, 'local'))

    sys.exit(0)
