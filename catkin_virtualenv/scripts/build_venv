#!/usr/bin/env python
from __future__ import print_function

import argparse
import os
import re
import shutil
import sys

from dh_virtualenv import Deployment
from distutils.spawn import find_executable


_BYTECODE_REGEX = re.compile('.*.py[co]')


def delete_bytecode(directory):
    for root, dirs, files in os.walk(directory):
        for f in files:
            if _BYTECODE_REGEX.match(f):
                os.remove(os.path.join(root, f))


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Build a relocatable virtualenv.")
    parser.add_argument('--requirements', required=True, help="Packages to install into the virtual environment.")
    parser.add_argument('--venv-dir', required=True, help="Directory where to generate the virtual environment.")
    parser.add_argument('--install-dir', help="Directory where the virtual environment will be installed.")
    parser.add_argument('--python3', action='store_true', help="Python interpreter")

    args, unknown = parser.parse_known_args()

    deploy = Deployment(
        package_dir=args.venv_dir,
        install_dir=os.path.abspath(args.install_dir) if args.install_dir else os.path.abspath(args.venv_dir),
        requirements_filename=args.requirements,
        upgrade_pip=True,
        verbose=False,
        use_system_packages=True,
        python=find_executable('python3') if args.python3 else find_executable('python2'),
        builtin_venv=args.python3,
    )

    print('Creating virtualenv')
    deploy.create_virtualenv()

    print('Installing dependencies')
    deploy.install_dependencies()

    print('Fixing paths')
    deploy.fix_activate_path()
    deploy.fix_shebangs()
    deploy.fix_local_symlinks()

    # Remove all .py[co] files since they embed absolute paths
    delete_bytecode(args.venv_dir)

    if not args.python3:
        # Remove local folder
        shutil.rmtree(os.path.join(args.venv_dir, 'local'))

    sys.exit(0)
