#!/usr/bin/env python3
# Software License Agreement (GPL)
#
# \file      venv_install
# \authors   Paul Bovbel <pbovbel@locusrobotics.com>
# \copyright Copyright (c) (2017,), Locus Robotics, All rights reserved.
#
# This program is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

import argparse
import inspect
import sys
import typing

import xml.etree.ElementTree as ET

from catkin_virtualenv import configure_logging
from catkin_virtualenv.venv import Virtualenv
from catkin_virtualenv.uvvenv import UVVirtualEnv
from catkin_virtualenv.cli import _parse_check_args, _build_sanitized_extra_args, diff_check

logger = configure_logging()


def main(argv: typing.Union[typing.List[str], None] = None) -> None:

    args = _parse_check_args(argv)

    extra_pip_args = _build_sanitized_extra_args(args, False)

    diff = []
    if args.use_uv:
        diff = []
        venv = UVVirtualEnv(args.venv)
        diff = venv.check(requirements=args.requirements, extra_uv_args=args.extra_uv_args)
    else:
        venv = Virtualenv(args.venv)
        diff = venv.check(
            requirements=args.requirements,
            extra_pip_args=extra_pip_args,
        )
    check_xunit(args, diff)


def check_xunit(args: argparse.Namespace, diff: typing.List[str]):

    if args.xunit_output:
        diff_check(args.xunit_output, args.requirements, diff)

    else:
        if diff:
            logger.error("{} is not fully locked, see diff:\n{}".format(args.requirements, "\n".join(diff)))
            sys.exit(1)


if __name__ == "__main__":
    main()
